<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--使用mybatis-generator 自动生成mapper dao model-->
<!-- 配置生成器 -->
<generatorConfiguration>
    <!--执行generator插件生成文件的命令： call mvn mybatis-config:generate -e -->
    <!-- 引入配置文件 主要是数据库路径和密码 -->
    <properties resource="config\generator.properties"/>
    <!--数据库驱动-->
    <!--设置驱动文件位置 可选-->
<!--    <classPathEntry    location="C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.45\mysql-connector-java-5.1.45.jar"/>-->
    <!-- 一个数据库一个context -->
    <!--defaultModelType="flat" 大数据字段，不分表 -->
    <context id="MysqlTables"    targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
       一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
<!--        <property name="autoDelimitKeywords" value="true"/>-->
        <!--生成Java文件的编码-->
        <property name="javaFileEncoding" value="utf-8"/>
        <!--beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endDelimiter" value="`"/>

        <!--格式化java代码-->
<!--        <property name="javaFormatter" value="org.mybatis.config.api.dom.DefaultJavaFormatter"/>-->
<!--        &lt;!&ndash;格式化xml代码&ndash;&gt;-->
<!--        <property name="xmlFormatter" value="org.mybatis.config.api.dom.DefaultXmlFormatter"/>-->
<!--        <plugin type="org.mybatis.generator.api.Plugin"/>-->
<!--        <plugin type="org.mybatis.config.plugins.ToStringPlugin" />-->
<!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />-->



<!--        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">-->
<!--            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>-->
<!--            &lt;!&ndash; caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true &ndash;&gt;-->
<!--            <property name="caseSensitive" value="true"/>-->
<!--            &lt;!&ndash; 启用swagger注解  默认false&ndash;&gt;-->
<!--            <property name="swaggerApiEnabled" value="true" />-->
<!--        </plugin>-->
        <!--设置注释-->
        <commentGenerator>
            <property name="suppressDate" value="false"/> <!-- 是否生成注释代时间戳-->
            <property name="suppressAllComments" value="false"/> <!-- 是否取消注释 -->
        </commentGenerator>
        <!--数据库链接地址账号密码-->
        <jdbcConnection driverClass="${jdbc_driver}" connectionURL="jdbc:mysql://localhost:3306/photo_site?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8" userId="${jdbc_user}" password="${jdbc_password}">
        </jdbcConnection>
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="com.wang.study.photositejava.bean" targetProject="${project}">
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="${resources}">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--生成Dao类存放位置-->
        <javaClientGenerator  targetPackage="com.wang.study.photositejava.dao" targetProject="${project}" type="XMLMAPPER" >
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>
        <!--对应的数据库表及model中生成的类名-->
        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 -->
        <!--<table tableName="tbl_user" domainObjectName="User" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <table tableName="ps_%" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
            <property name="useActualColumnNames" value="false" />
            <!-- 数据库表主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table>
    </context>
</generatorConfiguration>